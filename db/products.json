{
  "schema":{
    "id":0,
    "user_id":0,
    "product_name":"none",
    "image_url":"none",
    "source_code":"none",
    "created_at":"0000-00-00 00:00:00",
    "updated_at":"0000-00-00 00:00:00"
  },
  "auto_increment":{
    "id":16
  },
  "records":[
    {
      "id":1,
      "user_id":1,
      "product_name":"none",
      "image_url":"1.png",
      "source_code":"void setup() {\r\nsize(200, 200);\r\nbackground(125);\r\nfill(255);\r\nnoLoop();\r\n}\r\nvoid draw() {\r\n    text(\"Hello World!\", 20, 20);\r\n}\r\n            ",
      "created_at":"2017-07-24 01:22:04",
      "updated_at":"2017-07-24 20:25:49"
    },
    {
      "id":2,
      "user_id":1,
      "product_name":"none",
      "image_url":"2.png",
      "source_code":"void setup() {\r\n  size(200, 200);\r\n}\r\n\r\n  int count = 2;\r\nvoid draw() {\r\n  ellipse(count, count, count, count);\r\n  count++;\r\n}            ",
      "created_at":"2017-07-24 14:45:35",
      "updated_at":"2017-07-24 15:17:22"
    },
    {
      "id":3,
      "user_id":1,
      "product_name":"none",
      "image_url":"3.png",
      "source_code":"void setup() {\r\n  size(200, 200);\r\n}\r\n\r\n  int count = 2;\r\nvoid draw() {\r\n  ellipse(count, count, count, count);\r\n  count++;\r\n}                  ",
      "created_at":"2017-07-24 14:48:04",
      "updated_at":"2017-07-24 21:26:03"
    },
    {
      "id":4,
      "user_id":1,
      "product_name":"none",
      "image_url":"4.png",
      "source_code":"void setup() {\r\n  size(200, 200);\r\n}\r\n\r\n  int count = 2;\r\nvoid draw() {\r\n  ellipse(count, count, count, count);\r\n  count++;\r\n}            ",
      "created_at":"2017-07-24 15:00:42",
      "updated_at":"2017-07-24 15:00:42"
    },
    {
      "id":5,
      "user_id":1,
      "product_name":"none",
      "image_url":"5.png",
      "source_code":"void setup() {\r\n  size(200, 200);\r\n}\r\n\r\n  int count = 2;\r\nvoid draw() {\r\n  ellipse(count, count, count, count);\r\n  count++;\r\n}                        ",
      "created_at":"2017-07-24 15:03:18",
      "updated_at":"2017-07-26 00:02:30"
    },
    {
      "id":6,
      "user_id":1,
      "product_name":"none",
      "image_url":"6.png",
      "source_code":" \r\nint num = 6000;\r\n\r\nfloat[] x01 = new float[num];\r\nfloat[] y01 = new float[num];\r\nfloat[] z01 = new float[num];\r\nfloat[] x02 = new float[num];\r\nfloat[] y02 = new float[num];\r\nfloat[] z02 = new float[num];\r\nfloat[] deg01 = new float[num];\r\nfloat[] deg02 = new float[num];\r\nfloat rot_x;\r\nfloat rot_y;\r\nfloat rot_z;\r\nfloat amp01;\r\nfloat amp02;\r\nfloat range;\r\n\r\nvoid setup () {\r\n\r\n    \/\/\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u7403\u9762\u306e\u534a\u5f84\r\n    amp01 = 200.0;\r\n\r\n    rot_x = 0.0;\r\n    rot_y = 0.0;\r\n    rot_z = 0.0;\r\n\r\n    range = 4.0;\r\n\r\n    size (500,500, P3D);\r\n    colorMode (RGB, 256);\r\n    background (0);\r\n    frameRate (60);\r\n\r\n    for (int i = 0; i < num; i++) {\r\n\r\n        \/\/\u7403\u9762\u306e\u5ea7\u6a19\u3092\u5f97\u308b\u70ba\u306b2\u3064\u306e\u89d2\u5ea6\u3092\u7528\u610f\r\n        deg01[i] = random (360);\r\n        deg02[i] = random (360);\r\n\r\n    }\r\n\r\n    for (int i = 0; i < num; i++) {\r\n\r\n        \/\/2\u3064\u306e\u89d2\u5ea6\u304b\u3089\u7403\u9762\u4e0a\u306e\u5ea7\u6a19\u3092\u8a08\u7b97\r\n        x01[i] = amp01 * cos (radians (deg01[i])) * sin (radians (deg02[i]));\r\n        y01[i] = amp01 * sin (radians (deg01[i]));\r\n        z01[i] = amp01 * cos (radians (deg01[i])) * cos (radians (deg02[i]));\r\n\r\n    }\r\n\r\n}\r\n\r\nvoid draw () {\r\n\r\n    background (0);\r\n\r\n    \/\/\u30ab\u30e1\u30e9\u306e\u8a2d\u5b9a\r\n    camera (mouseX - (width \/ 2), mouseY - (height \/ 2), 0.0,\r\n            width \/ 2, height \/ 2, 0.0,\r\n            0.0, 1.0, 0.0);\r\n\r\n    translate (width \/ 2, height \/ 2);\r\n    rotateX (radians (rot_x));\r\n    rotateY (radians (rot_y));\r\n    rotateZ (radians (rot_z));\r\n\r\n    for (int i = 0; i < num; i++) {\r\n\r\n        \/\/\u30de\u30a6\u30b9\u306e\u4f4d\u7f6e\u3092\u53d6\u5f97\r\n        float offsetx = mouseX - (width \/ 2);\r\n        float offsety = mouseY - (height \/ 2);\r\n\r\n        \/\/\u30de\u30a6\u30b9\u306e\u4f4d\u7f6e\u3068\u7403\u9762\u4e0a\u5ea7\u6a19\u3068\u306e\u5dee\u3092\u8a08\u7b97\r\n        float diffx = abs (offsetx - x01[i]);\r\n        float diffy = abs (offsety - y01[i]);\r\n\r\n        \/\/\u4e0a\u306e\u5dee\u306b\u57fa\u3065\u3044\u3066\u91dd\u306e\u9577\u3055\u3092\u8a08\u7b97\uff08\u7279\u306b\u516c\u5f0f\u306f\u306a\u304f\u3044\u3044\u611f\u3058\u306b\u306a\u308b\u3088\u3046\u306b\uff09\r\n        amp02 = (4000 \/ (diffx + diffy + 1)) + amp01 + 1;\r\n\r\n        \/\/\u91dd\u304c\u4f38\u3073\u305f\u5148\u306e\u5ea7\u6a19\u3092\u7814\u947d\r\n        x02[i] = amp02 * cos (radians (deg01[i])) * sin (radians (deg02[i]));\r\n        y02[i] = amp02 * sin (radians (deg01[i]));\r\n        z02[i] = amp02 * cos (radians (deg01[i])) * cos (radians (deg02[i]));\r\n\r\n        stroke (int (abs (x01[i])), int (abs (y01[i])), int (abs (z01[i])));\r\n        strokeWeight (1);\r\n        noFill ();\r\n        \/\/\u7403\u9762\u4e0a\u306e\u5ea7\u6a19\u304b\u3089\u91dd\u306e\u5148\u306e\u5ea7\u6a19\u307e\u3067\u7dda\u3092\u63cf\u304f\r\n        line (x01[i], y01[i], z01[i], x02[i], y02[i], z02[i]);\r\n\r\n    }\r\n\r\n    rot_x += map (mouseY, 0, height, -range, range);\r\n    rot_y += map (mouseX, 0, width, -range, range);\r\n    rot_z += ((map (mouseY, 0, height, -range, range) + map (mouseX, 0, width, -range, range)) \/ 2);\r\n\r\n    \/\/saveFrame ();\r\n\r\n}            ",
      "created_at":"2017-07-24 15:15:09",
      "updated_at":"2017-07-25 23:57:19"
    },
    {
      "id":7,
      "user_id":"1",
      "product_name":"none",
      "image_url":"7.png",
      "source_code":"void setup() {\r\n  size(200,200);\r\n}\r\n\r\nvoid draw() {\r\n  ellipse(10, 10, 50, 50);\r\n}      ",
      "created_at":"2017-07-25 13:28:29",
      "updated_at":"2017-07-25 14:16:38"
    },
    {
      "id":8,
      "user_id":"1",
      "product_name":"none",
      "image_url":"8.png",
      "source_code":"void setup(){\r\n    size(600, 600);\r\n    background(255);\r\n}\r\n \r\nfloat x = 300;\r\nfloat y = 200;\r\nint r = 180;\r\n \r\nvoid draw(){\r\n    fill(255, 10);\r\n    noStroke();\r\n    rect(0, 0, 600, 400);\r\n    noFill();\r\n    x = x + random(-2, 2);\r\n    y = y + random(-2, 2);\r\n    stroke(random(255), random(255), 255);\r\n    ellipse(x, y, r, r);\r\n}                                    ",
      "created_at":"2017-07-25 13:39:27",
      "updated_at":"2017-07-25 14:01:59"
    },
    {
      "id":9,
      "user_id":"1",
      "product_name":"none",
      "image_url":"9.png",
      "source_code":"void setup(){\r\n    size(600, 400);\r\n    background(255);\r\n}\r\n \r\nfloat x = 300;\r\nfloat y = 200;\r\nint r = 180;\r\n \r\nvoid draw(){\r\n    fill(255, 10);\r\n    noStroke();\r\n    rect(0, 0, 600, 400);\r\n    noFill();\r\n    x = x + random(-2, 2);\r\n    y = y + random(-2, 2);\r\n    stroke(random(255), random(255), 255);\r\n    ellipse(x, y, r, r);\r\n}      ",
      "created_at":"2017-07-25 14:11:51",
      "updated_at":"2017-07-25 14:13:13"
    },
    {
      "id":10,
      "user_id":"1",
      "product_name":"none",
      "image_url":"10.png",
      "source_code":"void setup() {\r\n  size(200, 200);\r\n}\r\n\r\nvoid draw() {\r\n  ellipse(100, 100, 100, 100);\r\n}                  ",
      "created_at":"2017-07-25 14:19:53",
      "updated_at":"2017-07-26 00:01:41"
    },
    {
      "id":11,
      "user_id":"1",
      "product_name":"none",
      "image_url":"11.png",
      "source_code":"float theta;\r\nfloat t;\r\nfloat xspeed;\r\nint direction=1;\r\n\r\nvoid setup(){\r\n  size(200,200);\r\n  smooth();\r\n  noStroke();\r\n  \r\n}\r\n\r\nvoid draw(){\r\n  background(180,200,100);\r\n  t=20*noise(-1,1);\r\n  fill(0);\r\n    for(int i=0;i<100;i++){\r\n  ellipse(i+xspeed,height\/2+t*sin(theta+0.1*i),31,31);\r\n  }\r\n  for(int i=0;i<100;i++){\r\n  fill(255);\r\n  ellipse(i+xspeed,height\/2+t*sin(theta+0.1*i),29,29);\r\n  }\r\n  theta+=0.1*direction;\r\n  xspeed+=0.7*direction;\r\n  if(xspeed+100>width){\r\n    direction*=-1;\r\n  }\r\n  if(xspeed<0){\r\n    direction*=-1;\r\n  }\r\n}",
      "created_at":"2017-07-26 00:37:31",
      "updated_at":"2017-07-26 07:43:09"
    },
    {
      "id":12,
      "user_id":"1",
      "product_name":"none",
      "image_url":"12.png",
      "source_code":"float theta;\r\nfloat t;\r\nfloat xspeed;\r\nint direction=1;\r\n\r\nvoid setup(){\r\n  size(200,200);\r\n  smooth();\r\n  noStroke();\r\n  \r\n}\r\n\r\nvoid draw(){\r\n  background(180,200,100);\r\n  t=20*noise(-1,1);\r\n  fill(0);\r\n    for(int i=0;i<100;i++){\r\n  ellipse(i+xspeed,height\/2+t*sin(theta+0.1*i),31,31);\r\n  }\r\n  for(int i=0;i<100;i++){\r\n  fill(255);\r\n  ellipse(i+xspeed,height\/2+t*sin(theta+0.1*i),29,29);\r\n  }\r\n  theta+=0.1*direction;\r\n  xspeed+=0.7*direction;\r\n  if(xspeed+100>width){\r\n    direction*=-1;\r\n  }\r\n  if(xspeed<0){\r\n    direction*=-1;\r\n  }\r\n}",
      "created_at":"2017-07-26 00:38:23",
      "updated_at":"2017-07-26 07:46:19"
    },
    {
      "id":13,
      "user_id":"1",
      "product_name":"none",
      "image_url":"13.png",
      "source_code":"int NUM = 500; \/\/\u914d\u5217\u306e\u6570\r\nPVector[] location = new PVector[NUM]; \/\/\u4f4d\u7f6e\u306e\u30d9\u30af\u30c8\u30eb\u306e\u914d\u5217\r\nPVector[] velocity = new PVector[NUM]; \/\/\u901f\u5ea6\u306e\u30d9\u30af\u30c8\u30eb\u306e\u914d\u5217\r\ncolor[] col = new color[NUM]; \/\/\u5857\u308a\u306e\u8272\u306e\u914d\u5217\r\nfloat[] diameter = new float[NUM]; \/\/\u5186\u306e\u5927\u304d\u3055(\u76f4\u5f84)\u306e\u914d\u5217<\/p>\r\n\r\nvoid setup() {\r\nsize(1500, 500); \/\/640x480pixel\u306e\u753b\u9762\u3092\u751f\u6210\r\nframeRate(60); \/\/\u30d5\u30ec\u30fc\u30e0\u30ec\u30fc\u30c8\r\nnoStroke();\r\nfor (int i = 0; i < NUM; i++) { \/\/\u914d\u5217\u306e\u6570\u3060\u3051\u7e70\u308a\u8fd4\u3057\r\nlocation[i] = new PVector(random(width), random(height)); \/\/\u4f4d\u7f6e\u306e\u30d9\u30af\u30c8\u30eb\u306e\u521d\u671f\u8a2d\u5b9a\r\nvelocity[i] = new PVector(random(-4, 4), random(-4, 4)); \/\/\u901f\u5ea6\u306e\u30d9\u30af\u30c8\u30eb\u306e\u521d\u671f\u8a2d\u5b9a\r\ncol[i] = color(random(255), random(255), random(255), 127); \/\/\u8272\u306e\u521d\u671f\u8a2d\u5b9a\r\ndiameter[i] = random(3, 40); \/\/\u5927\u304d\u3055\u306e\u521d\u671f\u8a2d\u5b9a\r\n}\r\n}\r\n\r\nvoid draw() {\r\nbackground(60); \/\/\u80cc\u666f\u3092\u63cf\u753b\r\nfor (int i = 0; i < NUM; i++) { \/\/\u914d\u5217\u306e\u6570\u3060\u3051\u7e70\u308a\u8fd4\u3057\r\nfill(col[i]); \/\/\u8272\u3092\u6307\u5b9a\r\nellipse(location[i].x, location[i].y, diameter[i], diameter[i]); \/\/\u6307\u5b9a\u3057\u305f\u4f4d\u7f6e\u306b\u5186\u3092\u63cf\u753b\r\nlocation[i].add(velocity[i]); \/\/\u4f4d\u7f6e\u306e\u30d9\u30af\u30c8\u30eb\u306b\u901f\u5ea6\u306e\u30d9\u30af\u30c8\u30eb\u3092\u52a0\u7b97\u3001\u6b21\u306e\u4f4d\u7f6e\u306b\u306a\u308b\r\nif ((location[i].x > width) || (location[i].x < 0)) { \/\/\u3082\u3057\u753b\u9762\u306e\u5de6\u7aef\u3001\u307e\u305f\u306f\u53f3\u7aef\u306b\u5230\u9054\u3057\u305f\u3089\r\nvelocity[i].x *= -1; \/\/X\u65b9\u5411\u306e\u30b9\u30d4\u30fc\u30c9\u3092\u53cd\u8ee2\r\n}\r\nif ((location[i].y > height) || (location[i].y < 0)) { \/\/\u3082\u3057\u753b\u9762\u306e\u4e0b\u7aef\u3001\u307e\u305f\u306f\u4e0a\u7aef\u306b\u5230\u9054\u3057\u305f\u3089\r\nvelocity[i].y *= -1; \/\/Y\u65b9\u5411\u306e\u30b9\u30d4\u30fc\u30c9\u3092\u53cd\u8ee2\r\n}\r\n}\r\n}",
      "created_at":"2017-07-26 00:55:36",
      "updated_at":"2017-07-26 00:55:36"
    },
    {
      "id":14,
      "user_id":"1",
      "product_name":"none",
      "image_url":"14.png",
      "source_code":"void setup() {\r\n  size(200, 200);\r\n}\r\n\r\nvoid draw() {\r\n  ellipse(40, 40, 40, 40);\r\n}",
      "created_at":"2017-07-26 08:52:04",
      "updated_at":"2017-07-26 08:52:04"
    },
    {
      "id":15,
      "user_id":"2",
      "product_name":"none",
      "image_url":"15.png",
      "source_code":"ArrayList poop;\r\nint distance =50;\r\nboolean flag=true;\r\nvoid setup()\r\n{\r\n  size(500, 500);\r\n  smooth();\r\n  poop = new ArrayList();\r\n  for (int i=0;i<120;i++) {\r\n    PVector PD = new PVector(random(-150, 150), random(-150, 150));\r\n    Dots D = new Dots(PD);\r\n    poop.add(D);\r\n  }\r\n}\r\n\r\n\r\nvoid draw()\r\n{\r\n  background(255);\r\n  translate(width\/2, height\/2);\r\n  pushStyle();\r\n  fill(0);\r\n  stroke(0,50);\r\n  ellipse(0,0,400,400);\r\n  popStyle();\r\n  \/\/----------------\r\n  for (int i=0;i<poop.size();i++) {\r\n    Dots dots1 = (Dots) poop.get(i);\r\n    dots1.display();\r\n    dots1.update();\r\n    for (int j=i+1;j<poop.size();j++) {\r\n      Dots dots2 = (Dots) poop.get(j);\r\n      dots2.update();\r\n      if (dist(dots1.location.x, dots1.location.y, dots2.location.x, dots2.location.y)<distance) {\r\n        for (int k=j+1;k<poop.size();k++) {\r\n          Dots dots3 = (Dots) poop.get(k);\r\n          dots3.update();\r\n          if (flag) {\r\n            fill(dots3.c, 50);\r\n            noStroke();\r\n          }\r\n          else\r\n          {\r\n            noFill();\r\n            stroke(255,50);\r\n          }\r\n          if (dist(dots3.location.x, dots3.location.y, dots2.location.x, dots2.location.y)<distance) {\r\n            beginShape();\r\n            vertex(dots3.location.x, dots3.location.y);\r\n            vertex(dots2.location.x, dots2.location.y);\r\n            vertex(dots1.location.x, dots1.location.y);\r\n            endShape();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \/\/----------------\r\n}\r\nvoid keyPressed()\r\n{\r\n  flag=!flag;\r\n}\r\nclass Dots {\r\n  PVector location;\r\n  PVector velocity;\r\n  color c;\r\n  int radius=200;\r\n  Dots(PVector _PV)\r\n  {\r\n    location = _PV;\r\n    int j = (int)random(0, 5);\r\n    if (j==0) c = color(#05CDE5);\r\n    if (j==1) c = color(#FFB803);\r\n    if (j==2) c = color(#FF035B);\r\n    if (j==3) c = color(#3D3E3E);\r\n    if (j==4) c = color(#D60FFF);\r\n    float xt = random(-0.01, 0.01);\r\n    float yt = random(-0.01, 0.01);\r\n    velocity = new PVector(xt, yt );\r\n  }\r\n\r\n  void display()\r\n  {\r\n    fill(c);\r\n    noStroke();\r\n    ellipse(location.x, location.y, 2, 2);\r\n  }\r\n  void update()\r\n  {\r\n    if (dist(location.x, location.y, 0, 0)>radius) {\r\n      velocity.mult(-1);\r\n      location.add(velocity);\r\n    }\r\n    else {\r\n      location.add(velocity);\r\n    }\r\n  }\r\n}",
      "created_at":"2017-07-26 09:27:06",
      "updated_at":"2017-07-26 09:27:06"
    }
  ]
}